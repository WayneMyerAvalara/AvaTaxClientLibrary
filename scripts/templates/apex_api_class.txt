/*
 * AvaTax Software Development Kit for Apex
 *
 * (c) 2004-2018 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @@copyright  2004-2018 Avalara, Inc.
 * @@license    https://www.apache.org/licenses/LICENSE-2.0
 * @@version    @SwaggerModel.ApiVersion
 * @@link       https://github.com/avadev/AvaTax-REST-V2-Apex-SDK
 */

global class AvaTaxClient
{
        // Returns the version number of the API used to generate this class
        global static string API_VERSION { get { return "@SwaggerModel.ApiVersion"; } }

@foreach(var m in SwaggerModel.Methods) {<text>
        // @CSharpComment(m.Summary, 8)
        //   @CSharpComment(m.Description, 8)
        // </text>
    foreach (var p in m.Params) {
        if (p.CleanParamName == "X-Avalara-Client") continue;
        WriteLine("        // <param name=\"" + p.CleanParamName + "\">" + CSharpComment(p.Comment, 8) + "</param>");
    }

    Write("        public " + m.ResponseTypeName + " " + m.Name + "(");

    bool any = false;
    foreach (var p in m.Params) {
        if (p.CleanParamName == "X-Avalara-Client") continue;
        Write(p.ApexTypeName + " " + p.CleanParamName + ", ");
        any = true;
    }
    if (any) {
        Backtrack(2);
    }

    WriteLine(")");
    WriteLine("        {");
    WriteLine("            AvaTaxPath path = new AvaTaxPath(\"" + m.URI + "\");");
    foreach (var p in m.Params) {
        if (p.ParameterLocation == ParameterLocationType.UriPath) {
            WriteLine("            path.ApplyField(\"{0}\", {1});", p.ParamName, p.CleanParamName);
        } else if (p.ParameterLocation == ParameterLocationType.QueryString) {
            WriteLine("            path.AddQuery(\"{0}\", {1});", p.ParamName, p.CleanParamName);
        }
    }
    
    if (m.ResponseType == "array"){
        WriteLine("            httpResponse res = restCallForList(\"" + m.HttpVerb.ToUpper() + "\", path, " + (m.BodyParam == null ? "null" : "model") + ");");
        WriteLine("            " + m.ResponseTypeName + " retVal = new " + m.ResponseTypeName + "()");
        WriteLine("            if(res.getStatusCode() == 200 || res.getStatusCode() == 201)");
        WriteLine("            {");
        WriteLine("                retVal.result = restCallForList(" + m.ResponseTypeName + ")System.JSON.deserialize(res.getBody(), " + m.ResponseTypeName + ".class);");
        WriteLine("            }");
        WriteLine("            else");
        WriteLine("            {");
        WriteLine("                retVal.error = ((ErrorResult)System.JSON.deserialize(res.getBody(), ErrorResult.class)).error;");
        WriteLine("            }");
        WriteLine("            return retVal");
    } else if(m.ResponseTypeName == "FileResult"){
        WriteLine("            responseFile = (\"" + m.HttpVerb.ToUpper() + "\", path, " + (m.BodyParam == null ? "null" : "model") + ");");
        WriteLine("            if(responseFile.getStatusCode() == 200 || responseFile.getStatusCode() == 201)");
        WriteLine("            {");
        WriteLine("                responseFile.result = restCallForFile(" + m.ResponseTypeName + ")System.JSON.deserialize(res.getBody(), " + m.ResponseTypeName + ".class);");
        WriteLine("            }");
        WriteLine("            return responseFile");
    } else {
        WriteLine("            " + m.ResponseTypeName + " responseModel = null;");
        WriteLine("            responseModel = restCall(\"" + m.HttpVerb.ToUpper() + "\", path, " + (m.BodyParam == null ? "null" : "model") + ", " + m.ResponseTypeName +".class.getName());");
        WriteLine("            if(responseModel.getStatusCode() == 200 || responseModel.getStatusCode() == 201)");
        WriteLine("            {");
        WriteLine("                responseModel.result = (" + m.ResponseTypeName + ")System.JSON.deserialize(res.getBody(), " + m.ResponseTypeName + ".class);");
        WriteLine("            }");
        WriteLine("            return responseModel");
    }
    WriteLine("        }");
    WriteLine("");
}
}